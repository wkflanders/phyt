import { writeFileSync, mkdirSync } from 'fs';
import { join } from 'path';

async function exportAbis() {
    const contractNames = ['Minter', 'PhytCards', 'Executor'];
    const abiDir = join(__dirname, '../abi');

    // Create ABI directory if it doesn't exist
    mkdirSync(abiDir, { recursive: true });

    // Export individual ABIs
    for (const name of contractNames) {
        const artifact = require(`../out/${name}.sol/${name}.json`);
        writeFileSync(
            join(abiDir, `${name}.json`),
            JSON.stringify(artifact.abi, null, 2)
        );
    }

    // Export index file
    const indexContent = `// Generated by script/export-abis.ts
${contractNames.map(name => `import ${name}Abi from './${name}.json';`).join('\n')}

export { ${contractNames.map(name => `${name}Abi`).join(', ')} };

export const BASE_RPC_URL = process.env.BASE_RPC_URL!;

export const DEPLOYED_ADDRESSES = {
  MINTER: process.env.MINTER_ADDRESS,
  PHYT_CARDS: process.env.PHYT_CARDS_ADDRESS,
  EXECUTOR: process.env.EXECUTOR_ADDRESS,
} as const;`;

    writeFileSync(join(abiDir, 'index.ts'), indexContent);
}

exportAbis().catch(console.error);